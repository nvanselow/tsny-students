{"version":3,"sources":["app/Constants.js","app/Controllers.js","app/Services.js","app/app.js","app/Auth/AuthController.js","app/constants/lodash.js","app/schools/SchoolController.js","app/services/ApiInterceptor.js","app/services/Auth.js","app/services/Goal.js","app/services/Note.js","app/services/School.js","app/services/Skill.js","app/services/Student.js","app/services/UserInfo.js","app/students/StudentsController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxvzzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"all.js","sourcesContent":["(function () {\n\n    'use strict';\n    angular.module('TsnyConstants', []);\n\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyControllers', []);\n\n}());","(function () {\n\n    'use strict';\n\n    angular.module('TsnyServices', []);\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyApp', ['ngMaterial', 'ui.router', 'ngMessages', 'TsnyControllers', 'TsnyConstants', 'TsnyServices'])\n        .config(['$mdThemingProvider', '$urlRouterProvider', '$stateProvider', '$httpProvider', function($mdThemingProvider, $urlRouterProvider, $stateProvider, $httpProvider) {\n            $mdThemingProvider.theme('default')\n                .primaryPalette('blue')\n                .accentPalette('amber')\n                .warnPalette('red');\n                //.backgroundPalette('deep-orange');\n                //.dark();\n\n            // For any unmatched url, redirect to /state1\n            $urlRouterProvider.otherwise(\"/\");\n            //\n            // Now set up the states\n            $stateProvider\n                .state('home', {\n                    url: \"/\",\n                    templateUrl: \"views/students.html\",\n                    controller: 'SchoolsController as SchoolsCtrl'\n                })\n                .state('login', {\n                    url: \"/login\",\n                    templateUrl: \"views/login.html\",\n                    controller: 'AuthController as AuthCtrl'\n                })\n                .state('add_student', {\n                    url: \"/schools/{school_id}/add-student\",\n                    templateUrl: \"views/add_student.html\",\n                    controller: 'AddStudentController as StudentCtrl',\n                    resolve: {\n                        schools: ['School', function(School){\n                            return School.all().then(function(data){\n                                return data;\n                            });\n                        }]\n                    }\n                })\n                .state('student_details', {\n                    url: \"/student/{student_id}\",\n                    templateUrl: \"views/student_details.html\",\n                    controller: 'StudentController as StudentCtrl',\n                    resolve: {\n                        details: ['Student', '$stateParams', function(Student, $stateParams){\n                            return Student.details($stateParams.student_id).then(function(data){\n                                return data;\n                            });\n                        }]\n                    }\n                })\n                ;\n\n            $httpProvider.interceptors.push('ApiInterceptor');\n        }]);\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyControllers')\n        .controller('AuthController', ['Auth', '$state', function(Auth, $state){\n\n            var ctrl = this;\n\n            ctrl.user = {email: '', password: '', remember: true};\n\n            ctrl.login = function(){\n                Auth.login(ctrl.user)\n                .then(function(result){\n                    //Success\n                    $state.go('home');\n                });\n            };\n\n            ctrl.logout = function(){\n                Auth.logout();\n            };\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyConstants')\n        .constant('_', window._);\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyControllers')\n        .controller('SchoolsController', ['UserInfo', 'School', 'Note', 'Student', '$state', function(UserInfo, School, Note, Student, $state){\n            var ctrl = this;\n\n            ctrl.user_info = UserInfo;\n\n            ctrl.loading = true;\n\n            //ctrl.schools = [{\"id\":1,\"name\":\"Boston\"},{\"id\":2,\"name\":\"Chicago\"},{\"id\":3,\"name\":\"NYC\"},{\"id\":4,\"name\":\"DC\"},{\"id\":5,\"name\":\"Los Angeles\"}];\n\n            ctrl.School = School;\n\n            ctrl.loading_students = false;\n\n            School.all()\n                .finally(function(){\n                    ctrl.loading = false;\n                });\n\n            ctrl.school_changed = function(){\n                ctrl.user_info.current_school.name = _.find(ctrl.School.schools, function(school){\n                    return school.id == ctrl.user_info.current_school.id;\n                }).name;\n\n                ctrl.update_student_list(ctrl.user_info.current_school.id);\n            };\n\n            ctrl.update_student_list = function(school_id){\n                ctrl.loading_students = true;\n                School.updateStudentsWithSummaries(school_id)\n                    .finally(function(){\n                        ctrl.loading_students = false;\n                    });\n            };\n\n            ctrl.addNote = function(student){\n                Note.addNote(student)\n                .then(function(result){\n                    //Success\n                    student.summary.most_recent_notes.unshift(result);\n\n                }, function(result){\n                    //Error\n\n                });\n            };\n\n            if(ctrl.user_info.current_school){\n                ctrl.update_student_list(ctrl.user_info.current_school.id);\n            }\n\n            //Search functionality\n            ctrl.selected_student = null;\n            ctrl.student_search_results = [];\n            ctrl.student_search_text = '';\n\n            ctrl.SearchForStudent = function(search_text){\n                Student.search(search_text)\n                .then(function(result){\n                    //Success\n                    ctrl.student_search_results = result;\n                    return result;\n                });\n            };\n\n            ctrl.SelectedStudentChanged = function(student){\n                if(!student) return;\n\n                $state.go('student_details', {student_id: student.id});\n                ctrl.student_search_text = '';\n                ctrl.selected_student = null;\n            };\n\n        }])\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyServices')\n        .service('ApiInterceptor', ['$window', function($window){\n            var interceptor = {};\n\n            interceptor.responseError = function(response) {\n                if (response.status === 401) {\n                    console.log('not logged in.');\n                    $window.location.href = '/auth/login';\n                }\n\n                if (response.state == 403) {\n                    console.log('unauthorized for that action');\n                    $window.location.href = '/auth/login';\n                }\n                return response;\n            };\n\n            return interceptor;\n        }])\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyServices')\n        .service('Auth', ['$http', '$window', function($http, $window){\n\n            var auth = {};\n\n            auth.login = function(user){\n\n                return $http.post('api/login', {user: user});\n\n            };\n\n            auth.logout = function(){\n                return $http.get('/auth/logout')\n                .then(function(result){\n                    //Success\n                    $window.location.href = '/auth/login';\n\n                }, function(result){\n                    //Error\n\n                });\n            };\n\n            return auth;\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n\n    angular.module('TsnyServices')\n        .service('Goal', ['$http', '$mdDialog', '$q', function($http, $mdDialog, $q){\n\n            var Goal = {};\n\n            Goal.addGoal = function(student){\n\n                var deferred = $q.defer();\n\n                $mdDialog.show({\n                    controller: 'AddGoalDialogController as GoalCtrl',\n                    templateUrl: 'views/goal_dialog.html',\n                    parent: angular.element(document.body),\n                    clickOutsideToClose:true,\n                    locals: {\n                        student: student\n                    }\n                })\n                    .then(function(result) {\n                        Goal.postGoal(result.student, result.goal)\n                        .then(function(result){\n                            //Success\n                            deferred.resolve(result);\n                            return result;\n\n                        }, function(result){\n                            //Error\n                            deferred.reject(null);\n                            return null;\n                        });\n                    }, function() {\n                        deferred.reject(null);\n                    });\n\n\n                return deferred.promise;\n            };\n\n            Goal.postGoal = function(student, goal){\n                return $http.post('api/student/' + student.id + '/goal', {goal:goal})\n                .then(function(result){\n                    //Success\n                    return result.data.goal;\n\n                }, function(result){\n                    //Error\n                    $q.reject(null);\n                });\n            };\n\n            Goal.toggleGoal = function(goal){\n                return $http.post('api/goal/' + goal.id + '/toggle', {})\n                .then(function(result){\n                    //Success\n                    goal.complete = result.data.complete;\n                    return goal;\n                }, function(result){\n                    //Error\n                    return result;\n                });\n            };\n\n            return Goal;\n\n        }])\n        .controller('AddGoalDialogController', ['$mdDialog', 'student', function($mdDialog, student){\n\n            var ctrl = this;\n\n            ctrl.student = student;\n\n            ctrl.goal = {description:'', complete:false};\n\n            ctrl.hide = function() {\n                $mdDialog.hide();\n            };\n            ctrl.cancel = function() {\n                $mdDialog.cancel();\n            };\n            ctrl.save = function() {\n                $mdDialog.hide({student: ctrl.student, goal: ctrl.goal});\n            };\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n\n    angular.module('TsnyServices')\n        .service('Note', ['$http', '$mdDialog', '$q', function($http, $mdDialog, $q){\n\n            var Note = {};\n\n            Note.addNote = function(student){\n\n                var deferred = $q.defer();\n\n                $mdDialog.show({\n                    controller: 'AddNoteDialogController as NoteCtrl',\n                    templateUrl: 'views/note_dialog.html',\n                    parent: angular.element(document.body),\n                    clickOutsideToClose:true,\n                    locals: {\n                        student: student\n                    }\n                })\n                    .then(function(result) {\n                        Note.postNote(result.student, result.note)\n                        .then(function(result){\n                            //Success\n                            deferred.resolve(result);\n                            return result;\n\n                        }, function(result){\n                            //Error\n                            deferred.reject(null);\n                            return null;\n                        });\n                    }, function() {\n                        deferred.reject(null);\n                    });\n\n\n                return deferred.promise;\n            };\n\n            Note.postNote = function(student, note){\n                return $http.post('api/student/' + student.id + '/note', {note:note})\n                .then(function(result){\n                    //Success\n                    return result.data.note;\n\n                }, function(result){\n                    //Error\n                    $q.reject(null);\n                });\n            };\n\n            return Note;\n\n        }])\n        .controller('AddNoteDialogController', ['$mdDialog', 'student', function($mdDialog, student){\n\n            var ctrl = this;\n\n            ctrl.student = student;\n\n            ctrl.note = {note:''};\n\n            ctrl.hide = function() {\n                $mdDialog.hide();\n            };\n            ctrl.cancel = function() {\n                $mdDialog.cancel();\n            };\n            ctrl.save = function() {\n                $mdDialog.hide({student: ctrl.student, note: ctrl.note});\n            };\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyServices')\n        .service('School', ['$http', '$q', function($http, $q){\n\n            var school = {};\n\n            school.schools = [];\n            school.students = [];\n\n            school.all = function(refresh){\n                var deferred = $q.defer();\n\n                if(!refresh && school.schools && school.schools.length){\n                    console.log('schools already exist');\n                    deferred.resolve(school.schools);\n                    return deferred.promise;\n                }\n\n                $http.get('api/schools')\n                    .then(function(result){\n                        //Success\n                        school.schools = result.data;\n                        deferred.resolve(result.data);\n                    }, function(result){\n                        //Error\n                        console.log('Error!');\n                        console.log(result);\n                        school.schools = [];\n                        deferred.reject([]);\n                    });\n\n                console.log('got schools from http');\n\n                return deferred.promise;\n            };\n\n            school.updateStudents = function(school_id){\n\n                return $http.get('api/schools/' + school_id + '/students')\n                .then(function(result){\n                    //Success\n                    school.students = result.data;\n                    return result.data;\n\n                }, function(result){\n                    //Error\n                    console.log('error obtaining students for this school.');\n                    school.students = [];\n                    return [];\n                });\n            };\n\n            school.updateStudentsWithSummaries = function(school_id){\n\n                return $http.get('api/schools/' + school_id + '/students/summaries')\n                    .then(function(result){\n                        //Success\n                        school.students = result.data;\n                        return result.data;\n\n                    }, function(result){\n                        //Error\n                        console.log('error obtaining students for this school.');\n                        school.students = [];\n                        return [];\n                    });\n            };\n\n            return school;\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n\n    angular.module('TsnyServices')\n        .service('Skill', ['$http', '$mdDialog', '$q', function($http, $mdDialog, $q){\n\n            var Skill = {};\n\n            Skill.addSkill = function(student){\n\n                var deferred = $q.defer();\n\n                $mdDialog.show({\n                    controller: 'AddSkillDialogController as SkillCtrl',\n                    templateUrl: 'views/skill_dialog.html',\n                    parent: angular.element(document.body),\n                    clickOutsideToClose:true,\n                    locals: {\n                        student: student\n                    }\n                })\n                    .then(function(result) {\n                        Skill.postSkill(result.student, result.skill)\n                        .then(function(result){\n                            //Success\n                            deferred.resolve(result);\n                            return result;\n\n                        }, function(result){\n                            //Error\n                            deferred.reject(null);\n                            return null;\n                        });\n                    }, function() {\n                        deferred.reject(null);\n                    });\n\n\n                return deferred.promise;\n            };\n\n            Skill.postSkill = function(student, skill){\n                return $http.post('api/student/' + student.id + '/skill', {skill:skill})\n                .then(function(result){\n                    //Success\n                    return result.data.skill;\n\n                }, function(result){\n                    //Error\n                    $q.reject(null);\n                });\n            };\n\n            Skill.toggleCurrentSkill = function(skill){\n                return $http.post('api/skill/' + skill.id + '/toggle', {})\n                .then(function(result){\n                    //Success\n                    skill.current = result.data.current;\n                    return skill;\n                }, function(result){\n                    //Error\n                    return result;\n                });\n            };\n\n            return Skill;\n\n        }])\n        .controller('AddSkillDialogController', ['$mdDialog', 'student', function($mdDialog, student){\n\n            var ctrl = this;\n\n            ctrl.student = student;\n\n            ctrl.skill = {name:'', proficiency:0, current:false, note:''};\n\n            ctrl.hide = function() {\n                $mdDialog.hide();\n            };\n            ctrl.cancel = function() {\n                $mdDialog.cancel();\n            };\n            ctrl.save = function() {\n                $mdDialog.hide({student: ctrl.student, skill: ctrl.skill});\n            };\n\n        }]);\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyServices')\n        .service('Student', ['$http', '$q', function($http, $q){\n            var student = {};\n\n            student.create = function(student){\n\n                return $http.post('api/student', {student: student});\n\n            };\n\n            student.details = function(student_id){\n\n                return $http.get('api/student/' + student_id)\n                .then(function(result){\n                    //Success\n                    return {\n                        student: result.data.student,\n                        goals: result.data.details.goals,\n                        skills: result.data.details.skills,\n                        notes: result.data.details.notes\n                    };\n\n                }, function(result){\n                    //Error\n                    return null;\n                });\n\n            };\n\n            student.search = function(search_text){\n\n                var deferred = $q.defer();\n\n                if(!search_text || !search_text.length){\n                    deferred.reject([]);\n                } else {\n                    $http.get('api/student/search/' + search_text)\n                        .then(function(result){\n                            //Success\n                            deferred.resolve(result.data);\n                        }, function(result){\n                            //Error\n                            deferred.reject(result);\n                        });\n                }\n\n                return deferred.promise;\n            };\n\n            return student;\n        }]);\n\n}());","(function () {\n\n    'use strict';\n\n    angular.module('TsnyServices')\n        .service('UserInfo', ['Auth', function(Auth){\n            var user_info = {};\n\n            user_info.current_school = {\"id\":1,\"name\":\"Boston\"};\n\n            user_info.logout = function(){\n                Auth.logout();\n            };\n\n            return user_info;\n        }])\n\n}());","(function () {\n\n    'use strict';\n    angular.module('TsnyControllers')\n        .controller('StudentController', ['Student', 'Note', 'Goal', 'Skill', '$state', 'details', function(Student, Note, Goal, Skill, $state, details){\n\n            var ctrl = this;\n\n            ctrl.student = details.student;\n            ctrl.goals = details.goals;\n            ctrl.skills = details.skills;\n            ctrl.notes = details.notes;\n\n            ctrl.addNote = function(){\n                Note.addNote(ctrl.student)\n                    .then(function(result){\n                        //Success\n                        ctrl.notes.unshift(result);\n                    });\n            };\n\n            ctrl.addGoal = function(){\n                Goal.addGoal(ctrl.student)\n                    .then(function(result){\n                        ctrl.goals.unshift(result);\n                    });\n            };\n\n            ctrl.addSkill = function(){\n                Skill.addSkill(ctrl.student)\n                    .then(function(result){\n                        ctrl.skills.unshift(result);\n                    });\n            };\n\n            ctrl.ToggleGoal = function(goal){\n                Goal.toggleGoal(goal);\n            };\n\n            ctrl.ToggleCurrentSkill = function(skill){\n                Skill.toggleCurrentSkill(skill);\n            }\n\n        }])\n        .controller('AddStudentController', ['$stateParams', 'schools', 'Student', '$state', function($stateParams, schools, Student, $state){\n\n            var ctrl = this;\n\n            ctrl.schools = schools;\n\n            ctrl.student = {\n                first_name: '',\n                last_name: '',\n                nickname: '',\n                email: '',\n                primary_school: $stateParams.school_id,\n                schools: [Number($stateParams.school_id)]\n            };\n\n            ctrl.change_primary_school = function(){\n                var school_id = Number(ctrl.student.primary_school);\n                if(!ctrl.school_exists_in_list(school_id)){\n                    ctrl.student.schools.push(school_id);\n                }\n            };\n\n            ctrl.toggle_school = function (school_id) {\n                var list = ctrl.student.schools;\n                var item = school_id;\n\n                if(item == ctrl.student.primary_school) return;\n\n                var idx = list.indexOf(item);\n                if (idx > -1) list.splice(idx, 1);\n                else list.push(item);\n            };\n            ctrl.school_exists_in_list = function (school_id) {\n                var list = ctrl.student.schools;\n                var item = school_id;\n\n                return list.indexOf(item) > -1;\n            };\n\n            ctrl.adding_student = false;\n            ctrl.addStudent = function(){\n                ctrl.adding_student = true;\n                Student.create(ctrl.student)\n                    .then(function(result){\n                        //Success\n                        $state.go('home');\n\n                    }, function(result){\n                        //Error\n\n                    })\n                    .finally(function(){\n                        ctrl.adding_student = false;\n                    });\n            };\n\n            ctrl.cancel = function(){\n                $state.go('home');\n            };\n\n        }]);\n\n}());"],"sourceRoot":"/source/"}